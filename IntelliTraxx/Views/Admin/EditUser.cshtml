@model IntelliTraxx.Controllers.EditUser

@{
    ViewBag.Title = "EditUser";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div id="nav" class="container-fluid center-block">
    <div id="logo"></div>
    <div id="mapIcon" class="mapIcon_in" data-toggle="tooltip" data-placement="left" title="Map"></div>
    <div id="alertsIcon" class="alertsIcon_in" data-toggle="tooltip" data-placement="bottom" title="Alerts"></div>
    <div id="geofenceIcon" class="geofenceIcon_in" data-toggle="tooltip" data-placement="left" title="Disabled"></div>
    <div id="appsIcon" class="appsIcon_in" data-toggle="tooltip" data-placement="top" title="Disabled"></div>
    <div id="diagnosticsIcon" class="diagnosticsIcon_in" data-toggle="tooltip" data-placement="right" title="Scheduling"></div>
    <div id="analyticsIcon" class="analyticsIcon_in" data-toggle="tooltip" data-placement="right" title="Analytics"></div>
    <div id="adminIcon" class="adminIcon_in" data-toggle="tooltip" data-placement="right" title="Administration"></div>
    <div id="profileDiv" class="profileDiv_in">
        @using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm" }))
            {
            @Html.AntiForgeryToken()
            <small>
                <ul class="list-group">
                    <li class="list-group-item"><a href="" class="text-left" style="padding: 5px;" id="userNameRole"></a><br /></li>
                    <li class="list-group-item"><a href="" class="text-left" style="padding: 5px;"><i class="glyphicons glyphicons-bell"></i> Notifications<span class="badge" style="margin-left: 5px;">3</span></a><br /></li>
                    <li class="list-group-item"><a href="" class="text-left" style="padding: 5px;"><i class="glyphicons glyphicons-question-sign"></i> Help</a></li>
                    <li class="list-group-item"><a href="javascript:document.getElementById('logoutForm').submit()" style="padding: 5px;"><i class="glyphicons glyphicons-exit"></i> Log off</a></li>
                </ul>
            </small>
        }
    </div>
</div>

<div class="container-fluid col-lg-10 col-lg-offset-1">
    <h1 class="text-right alertsPageHeader"><strong>Administration</strong></h1>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.UserLastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserLastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserLastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserFirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserFirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserEmail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserEmail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.VerifyUserPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.VerifyUserPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VerifyUserPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserOffice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserOffice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserOffice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserPhone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserPhone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserPhone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Companies", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @foreach (var c in ViewBag.Companies)
                    {
                        if (Model.Companies.Contains(c.CompanyName))
                        {
                            <input type="checkbox" name="Companies" value="@c.CompanyID" checked> @c.CompanyName.ToString()<br />
                        }
                        else
                        {
                            <input type="checkbox" name="Companies" value="@c.CompanyID"> @c.CompanyName.ToString()<br />
                        }
                    }
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Roles", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @foreach (var r in ViewBag.Roles)
                    {
                        if (Model.Roles.Contains(r.roleName))
                        {
                            <input type="checkbox" name="Roles" value="@r.RoleID" checked> @r.roleName.ToString()<br />
                        }
                        else
                        {
                            <input type="checkbox" name="Roles" value="@r.RoleID"> @r.roleName.ToString()<br />
                        }
                    }
                </div>
            </div>

            @Html.HiddenFor(model => model.UserSalt)

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to Users", "Index", new { tab = "U" })
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        @Ajax.ActionLink("Delete User", "DeleteUser", "Admin", new { userID = Model.UserID },
            new AjaxOptions()
            {
                HttpMethod = "POST"
            },
            new { onclick = "return confirm('Are you sure you wish to delete this user?')" })
    </div>

</div>