//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IntelliTraxx.AJAXVehiclesService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="polygonData", Namespace="http://schemas.datacontract.org/2004/07/LATATrax.Models")]
    [System.SerializableAttribute()]
    public partial class polygonData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IntelliTraxx.AJAXVehiclesService.LatLon[] geoFenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid geoFenceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string geoTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double maxLatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double maxLonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double minLatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double minLonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string notesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string polyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double radiusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IntelliTraxx.AJAXVehiclesService.LatLon[] geoFence {
            get {
                return this.geoFenceField;
            }
            set {
                if ((object.ReferenceEquals(this.geoFenceField, value) != true)) {
                    this.geoFenceField = value;
                    this.RaisePropertyChanged("geoFence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid geoFenceID {
            get {
                return this.geoFenceIDField;
            }
            set {
                if ((this.geoFenceIDField.Equals(value) != true)) {
                    this.geoFenceIDField = value;
                    this.RaisePropertyChanged("geoFenceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string geoType {
            get {
                return this.geoTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.geoTypeField, value) != true)) {
                    this.geoTypeField = value;
                    this.RaisePropertyChanged("geoType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double maxLat {
            get {
                return this.maxLatField;
            }
            set {
                if ((this.maxLatField.Equals(value) != true)) {
                    this.maxLatField = value;
                    this.RaisePropertyChanged("maxLat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double maxLon {
            get {
                return this.maxLonField;
            }
            set {
                if ((this.maxLonField.Equals(value) != true)) {
                    this.maxLonField = value;
                    this.RaisePropertyChanged("maxLon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double minLat {
            get {
                return this.minLatField;
            }
            set {
                if ((this.minLatField.Equals(value) != true)) {
                    this.minLatField = value;
                    this.RaisePropertyChanged("minLat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double minLon {
            get {
                return this.minLonField;
            }
            set {
                if ((this.minLonField.Equals(value) != true)) {
                    this.minLonField = value;
                    this.RaisePropertyChanged("minLon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string notes {
            get {
                return this.notesField;
            }
            set {
                if ((object.ReferenceEquals(this.notesField, value) != true)) {
                    this.notesField = value;
                    this.RaisePropertyChanged("notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string polyName {
            get {
                return this.polyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.polyNameField, value) != true)) {
                    this.polyNameField = value;
                    this.RaisePropertyChanged("polyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double radius {
            get {
                return this.radiusField;
            }
            set {
                if ((this.radiusField.Equals(value) != true)) {
                    this.radiusField = value;
                    this.RaisePropertyChanged("radius");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LatLon", Namespace="http://schemas.datacontract.org/2004/07/LATATrax.Models")]
    [System.SerializableAttribute()]
    public partial class LatLon : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Alt {
            get {
                return this.AltField;
            }
            set {
                if ((this.AltField.Equals(value) != true)) {
                    this.AltField = value;
                    this.RaisePropertyChanged("Alt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lat {
            get {
                return this.LatField;
            }
            set {
                if ((this.LatField.Equals(value) != true)) {
                    this.LatField = value;
                    this.RaisePropertyChanged("Lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lon {
            get {
                return this.LonField;
            }
            set {
                if ((this.LonField.Equals(value) != true)) {
                    this.LonField = value;
                    this.RaisePropertyChanged("Lon");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="speak", Namespace="http://tempuri.org")]
    [System.SerializableAttribute()]
    public partial class speak : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OBDUpdate", Namespace="http://schemas.datacontract.org/2004/07/LATATrax")]
    [System.SerializableAttribute()]
    public partial class OBDUpdate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MACField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] dtcsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] pidvalsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAC {
            get {
                return this.MACField;
            }
            set {
                if ((object.ReferenceEquals(this.MACField, value) != true)) {
                    this.MACField = value;
                    this.RaisePropertyChanged("MAC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] dtcs {
            get {
                return this.dtcsField;
            }
            set {
                if ((object.ReferenceEquals(this.dtcsField, value) != true)) {
                    this.dtcsField = value;
                    this.RaisePropertyChanged("dtcs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] pidvals {
            get {
                return this.pidvalsField;
            }
            set {
                if ((object.ReferenceEquals(this.pidvalsField, value) != true)) {
                    this.pidvalsField = value;
                    this.RaisePropertyChanged("pidvals");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="AJAXVehiclesService.AJAXVehicles")]
    public interface AJAXVehicles {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/DoWork", ReplyAction="urn:AJAXVehicles/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/DoWork", ReplyAction="urn:AJAXVehicles/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/getLogon", ReplyAction="urn:AJAXVehicles/getLogonResponse")]
        string getLogon(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/getLogon", ReplyAction="urn:AJAXVehicles/getLogonResponse")]
        System.Threading.Tasks.Task<string> getLogonAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/serviceTest", ReplyAction="urn:AJAXVehicles/serviceTestResponse")]
        string serviceTest();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/serviceTest", ReplyAction="urn:AJAXVehicles/serviceTestResponse")]
        System.Threading.Tasks.Task<string> serviceTestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/getJSONVehicles", ReplyAction="urn:AJAXVehicles/getJSONVehiclesResponse")]
        string getJSONVehicles();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/getJSONVehicles", ReplyAction="urn:AJAXVehicles/getJSONVehiclesResponse")]
        System.Threading.Tasks.Task<string> getJSONVehiclesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/addPolygon", ReplyAction="urn:AJAXVehicles/addPolygonResponse")]
        string addPolygon(IntelliTraxx.AJAXVehiclesService.polygonData poly, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/addPolygon", ReplyAction="urn:AJAXVehicles/addPolygonResponse")]
        System.Threading.Tasks.Task<string> addPolygonAsync(IntelliTraxx.AJAXVehiclesService.polygonData poly, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/getGeoFenceDesignerObjects", ReplyAction="urn:AJAXVehicles/getGeoFenceDesignerObjectsResponse")]
        string getGeoFenceDesignerObjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/getGeoFenceDesignerObjects", ReplyAction="urn:AJAXVehicles/getGeoFenceDesignerObjectsResponse")]
        System.Threading.Tasks.Task<string> getGeoFenceDesignerObjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/getSpecificGeoFenceDesignerObject", ReplyAction="urn:AJAXVehicles/getSpecificGeoFenceDesignerObjectResponse")]
        string getSpecificGeoFenceDesignerObject(string mapName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/getSpecificGeoFenceDesignerObject", ReplyAction="urn:AJAXVehicles/getSpecificGeoFenceDesignerObjectResponse")]
        System.Threading.Tasks.Task<string> getSpecificGeoFenceDesignerObjectAsync(string mapName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/getFenceNames", ReplyAction="urn:AJAXVehicles/getFenceNamesResponse")]
        string getFenceNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/getFenceNames", ReplyAction="urn:AJAXVehicles/getFenceNamesResponse")]
        System.Threading.Tasks.Task<string> getFenceNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/getPolygons", ReplyAction="urn:AJAXVehicles/getPolygonsResponse")]
        string getPolygons();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/getPolygons", ReplyAction="urn:AJAXVehicles/getPolygonsResponse")]
        System.Threading.Tasks.Task<string> getPolygonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/getKMLByPolygon", ReplyAction="urn:AJAXVehicles/getKMLByPolygonResponse")]
        string getKMLByPolygon(string polyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/getKMLByPolygon", ReplyAction="urn:AJAXVehicles/getKMLByPolygonResponse")]
        System.Threading.Tasks.Task<string> getKMLByPolygonAsync(string polyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/sayHello", ReplyAction="urn:AJAXVehicles/sayHelloResponse")]
        IntelliTraxx.AJAXVehiclesService.speak sayHello();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/sayHello", ReplyAction="urn:AJAXVehicles/sayHelloResponse")]
        System.Threading.Tasks.Task<IntelliTraxx.AJAXVehiclesService.speak> sayHelloAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/setCellSignal", ReplyAction="urn:AJAXVehicles/setCellSignalResponse")]
        string setCellSignal(string MAC, string name, System.DateTime timestamp, double lat, double lon, int dBm, double quality);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/setCellSignal", ReplyAction="urn:AJAXVehicles/setCellSignalResponse")]
        System.Threading.Tasks.Task<string> setCellSignalAsync(string MAC, string name, System.DateTime timestamp, double lat, double lon, int dBm, double quality);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/ODBInit", ReplyAction="urn:AJAXVehicles/ODBInitResponse")]
        string ODBInit(string MAC);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/ODBInit", ReplyAction="urn:AJAXVehicles/ODBInitResponse")]
        System.Threading.Tasks.Task<string> ODBInitAsync(string MAC);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/setODBData", ReplyAction="urn:AJAXVehicles/setODBDataResponse")]
        string setODBData(IntelliTraxx.AJAXVehiclesService.OBDUpdate ODBData);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:AJAXVehicles/setODBData", ReplyAction="urn:AJAXVehicles/setODBDataResponse")]
        System.Threading.Tasks.Task<string> setODBDataAsync(IntelliTraxx.AJAXVehiclesService.OBDUpdate ODBData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AJAXVehiclesChannel : IntelliTraxx.AJAXVehiclesService.AJAXVehicles, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AJAXVehiclesClient : System.ServiceModel.ClientBase<IntelliTraxx.AJAXVehiclesService.AJAXVehicles>, IntelliTraxx.AJAXVehiclesService.AJAXVehicles {
        
        public AJAXVehiclesClient() {
        }
        
        public AJAXVehiclesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AJAXVehiclesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AJAXVehiclesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AJAXVehiclesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string getLogon(string userName, string password) {
            return base.Channel.getLogon(userName, password);
        }
        
        public System.Threading.Tasks.Task<string> getLogonAsync(string userName, string password) {
            return base.Channel.getLogonAsync(userName, password);
        }
        
        public string serviceTest() {
            return base.Channel.serviceTest();
        }
        
        public System.Threading.Tasks.Task<string> serviceTestAsync() {
            return base.Channel.serviceTestAsync();
        }
        
        public string getJSONVehicles() {
            return base.Channel.getJSONVehicles();
        }
        
        public System.Threading.Tasks.Task<string> getJSONVehiclesAsync() {
            return base.Channel.getJSONVehiclesAsync();
        }
        
        public string addPolygon(IntelliTraxx.AJAXVehiclesService.polygonData poly, string type) {
            return base.Channel.addPolygon(poly, type);
        }
        
        public System.Threading.Tasks.Task<string> addPolygonAsync(IntelliTraxx.AJAXVehiclesService.polygonData poly, string type) {
            return base.Channel.addPolygonAsync(poly, type);
        }
        
        public string getGeoFenceDesignerObjects() {
            return base.Channel.getGeoFenceDesignerObjects();
        }
        
        public System.Threading.Tasks.Task<string> getGeoFenceDesignerObjectsAsync() {
            return base.Channel.getGeoFenceDesignerObjectsAsync();
        }
        
        public string getSpecificGeoFenceDesignerObject(string mapName) {
            return base.Channel.getSpecificGeoFenceDesignerObject(mapName);
        }
        
        public System.Threading.Tasks.Task<string> getSpecificGeoFenceDesignerObjectAsync(string mapName) {
            return base.Channel.getSpecificGeoFenceDesignerObjectAsync(mapName);
        }
        
        public string getFenceNames() {
            return base.Channel.getFenceNames();
        }
        
        public System.Threading.Tasks.Task<string> getFenceNamesAsync() {
            return base.Channel.getFenceNamesAsync();
        }
        
        public string getPolygons() {
            return base.Channel.getPolygons();
        }
        
        public System.Threading.Tasks.Task<string> getPolygonsAsync() {
            return base.Channel.getPolygonsAsync();
        }
        
        public string getKMLByPolygon(string polyName) {
            return base.Channel.getKMLByPolygon(polyName);
        }
        
        public System.Threading.Tasks.Task<string> getKMLByPolygonAsync(string polyName) {
            return base.Channel.getKMLByPolygonAsync(polyName);
        }
        
        public IntelliTraxx.AJAXVehiclesService.speak sayHello() {
            return base.Channel.sayHello();
        }
        
        public System.Threading.Tasks.Task<IntelliTraxx.AJAXVehiclesService.speak> sayHelloAsync() {
            return base.Channel.sayHelloAsync();
        }
        
        public string setCellSignal(string MAC, string name, System.DateTime timestamp, double lat, double lon, int dBm, double quality) {
            return base.Channel.setCellSignal(MAC, name, timestamp, lat, lon, dBm, quality);
        }
        
        public System.Threading.Tasks.Task<string> setCellSignalAsync(string MAC, string name, System.DateTime timestamp, double lat, double lon, int dBm, double quality) {
            return base.Channel.setCellSignalAsync(MAC, name, timestamp, lat, lon, dBm, quality);
        }
        
        public string ODBInit(string MAC) {
            return base.Channel.ODBInit(MAC);
        }
        
        public System.Threading.Tasks.Task<string> ODBInitAsync(string MAC) {
            return base.Channel.ODBInitAsync(MAC);
        }
        
        public string setODBData(IntelliTraxx.AJAXVehiclesService.OBDUpdate ODBData) {
            return base.Channel.setODBData(ODBData);
        }
        
        public System.Threading.Tasks.Task<string> setODBDataAsync(IntelliTraxx.AJAXVehiclesService.OBDUpdate ODBData) {
            return base.Channel.setODBDataAsync(ODBData);
        }
    }
}
