//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IntelliTraxx.TabletService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TabletDriver", Namespace="http://schemas.datacontract.org/2004/07/LATATrax")]
    [System.SerializableAttribute()]
    public partial class TabletDriver : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DriverImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid runIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DriverID {
            get {
                return this.DriverIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverIDField, value) != true)) {
                    this.DriverIDField = value;
                    this.RaisePropertyChanged("DriverID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] DriverImage {
            get {
                return this.DriverImageField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverImageField, value) != true)) {
                    this.DriverImageField = value;
                    this.RaisePropertyChanged("DriverImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DriverNumber {
            get {
                return this.DriverNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverNumberField, value) != true)) {
                    this.DriverNumberField = value;
                    this.RaisePropertyChanged("DriverNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageType {
            get {
                return this.ImageTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageTypeField, value) != true)) {
                    this.ImageTypeField = value;
                    this.RaisePropertyChanged("ImageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid runID {
            get {
                return this.runIDField;
            }
            set {
                if ((this.runIDField.Equals(value) != true)) {
                    this.runIDField = value;
                    this.RaisePropertyChanged("runID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="tabletGPS", Namespace="http://schemas.datacontract.org/2004/07/LATATrax")]
    [System.SerializableAttribute()]
    public partial class tabletGPS : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int directionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double latField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double lonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double speedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int direction {
            get {
                return this.directionField;
            }
            set {
                if ((this.directionField.Equals(value) != true)) {
                    this.directionField = value;
                    this.RaisePropertyChanged("direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double lat {
            get {
                return this.latField;
            }
            set {
                if ((this.latField.Equals(value) != true)) {
                    this.latField = value;
                    this.RaisePropertyChanged("lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double lon {
            get {
                return this.lonField;
            }
            set {
                if ((this.lonField.Equals(value) != true)) {
                    this.lonField = value;
                    this.RaisePropertyChanged("lon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double speed {
            get {
                return this.speedField;
            }
            set {
                if ((this.speedField.Equals(value) != true)) {
                    this.speedField = value;
                    this.RaisePropertyChanged("speed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dispatch", Namespace="http://schemas.datacontract.org/2004/07/LATATrax")]
    [System.SerializableAttribute()]
    public partial class dispatch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MACAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ackMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ackTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ackedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string addressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string completedMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> completedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string driverPINField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string noteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string routerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> runIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime sentToVehicleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string stateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime timeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vehicleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string zipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MACAddress {
            get {
                return this.MACAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.MACAddressField, value) != true)) {
                    this.MACAddressField = value;
                    this.RaisePropertyChanged("MACAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserEmail {
            get {
                return this.UserEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.UserEmailField, value) != true)) {
                    this.UserEmailField = value;
                    this.RaisePropertyChanged("UserEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ackMessage {
            get {
                return this.ackMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ackMessageField, value) != true)) {
                    this.ackMessageField = value;
                    this.RaisePropertyChanged("ackMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ackTime {
            get {
                return this.ackTimeField;
            }
            set {
                if ((this.ackTimeField.Equals(value) != true)) {
                    this.ackTimeField = value;
                    this.RaisePropertyChanged("ackTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool acked {
            get {
                return this.ackedField;
            }
            set {
                if ((this.ackedField.Equals(value) != true)) {
                    this.ackedField = value;
                    this.RaisePropertyChanged("acked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string address {
            get {
                return this.addressField;
            }
            set {
                if ((object.ReferenceEquals(this.addressField, value) != true)) {
                    this.addressField = value;
                    this.RaisePropertyChanged("address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string completedMessage {
            get {
                return this.completedMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.completedMessageField, value) != true)) {
                    this.completedMessageField = value;
                    this.RaisePropertyChanged("completedMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> completedTime {
            get {
                return this.completedTimeField;
            }
            set {
                if ((this.completedTimeField.Equals(value) != true)) {
                    this.completedTimeField = value;
                    this.RaisePropertyChanged("completedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string driverPIN {
            get {
                return this.driverPINField;
            }
            set {
                if ((object.ReferenceEquals(this.driverPINField, value) != true)) {
                    this.driverPINField = value;
                    this.RaisePropertyChanged("driverPIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string note {
            get {
                return this.noteField;
            }
            set {
                if ((object.ReferenceEquals(this.noteField, value) != true)) {
                    this.noteField = value;
                    this.RaisePropertyChanged("note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string routerID {
            get {
                return this.routerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.routerIDField, value) != true)) {
                    this.routerIDField = value;
                    this.RaisePropertyChanged("routerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> runID {
            get {
                return this.runIDField;
            }
            set {
                if ((this.runIDField.Equals(value) != true)) {
                    this.runIDField = value;
                    this.RaisePropertyChanged("runID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime sentToVehicle {
            get {
                return this.sentToVehicleField;
            }
            set {
                if ((this.sentToVehicleField.Equals(value) != true)) {
                    this.sentToVehicleField = value;
                    this.RaisePropertyChanged("sentToVehicle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string state {
            get {
                return this.stateField;
            }
            set {
                if ((object.ReferenceEquals(this.stateField, value) != true)) {
                    this.stateField = value;
                    this.RaisePropertyChanged("state");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                if ((this.timeStampField.Equals(value) != true)) {
                    this.timeStampField = value;
                    this.RaisePropertyChanged("timeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vehicleID {
            get {
                return this.vehicleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.vehicleIDField, value) != true)) {
                    this.vehicleIDField = value;
                    this.RaisePropertyChanged("vehicleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string zip {
            get {
                return this.zipField;
            }
            set {
                if ((object.ReferenceEquals(this.zipField, value) != true)) {
                    this.zipField = value;
                    this.RaisePropertyChanged("zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://tabletinterface.com", ConfigurationName="TabletService.ITabletInterface")]
    public interface ITabletInterface {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tabletinterface.com/ITabletInterface/LogonDriver", ReplyAction="http://tabletinterface.com/ITabletInterface/LogonDriverResponse")]
        IntelliTraxx.TabletService.TabletDriver LogonDriver(string DriverNumber, string Password, string VehicleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tabletinterface.com/ITabletInterface/LogonDriver", ReplyAction="http://tabletinterface.com/ITabletInterface/LogonDriverResponse")]
        System.Threading.Tasks.Task<IntelliTraxx.TabletService.TabletDriver> LogonDriverAsync(string DriverNumber, string Password, string VehicleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tabletinterface.com/ITabletInterface/DriverAutoLogon", ReplyAction="http://tabletinterface.com/ITabletInterface/DriverAutoLogonResponse")]
        IntelliTraxx.TabletService.TabletDriver DriverAutoLogon(string PIN, string VehicleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tabletinterface.com/ITabletInterface/DriverAutoLogon", ReplyAction="http://tabletinterface.com/ITabletInterface/DriverAutoLogonResponse")]
        System.Threading.Tasks.Task<IntelliTraxx.TabletService.TabletDriver> DriverAutoLogonAsync(string PIN, string VehicleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tabletinterface.com/ITabletInterface/LogoffDriver", ReplyAction="http://tabletinterface.com/ITabletInterface/LogoffDriverResponse")]
        string LogoffDriver(string DriverID, string VehicleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tabletinterface.com/ITabletInterface/LogoffDriver", ReplyAction="http://tabletinterface.com/ITabletInterface/LogoffDriverResponse")]
        System.Threading.Tasks.Task<string> LogoffDriverAsync(string DriverID, string VehicleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tabletinterface.com/ITabletInterface/LogonDriverByPin", ReplyAction="http://tabletinterface.com/ITabletInterface/LogonDriverByPinResponse")]
        IntelliTraxx.TabletService.TabletDriver LogonDriverByPin(string PIN, string VehicleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tabletinterface.com/ITabletInterface/LogonDriverByPin", ReplyAction="http://tabletinterface.com/ITabletInterface/LogonDriverByPinResponse")]
        System.Threading.Tasks.Task<IntelliTraxx.TabletService.TabletDriver> LogonDriverByPinAsync(string PIN, string VehicleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tabletinterface.com/ITabletInterface/getPosition", ReplyAction="http://tabletinterface.com/ITabletInterface/getPositionResponse")]
        IntelliTraxx.TabletService.tabletGPS getPosition(string VehicleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tabletinterface.com/ITabletInterface/getPosition", ReplyAction="http://tabletinterface.com/ITabletInterface/getPositionResponse")]
        System.Threading.Tasks.Task<IntelliTraxx.TabletService.tabletGPS> getPositionAsync(string VehicleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tabletinterface.com/ITabletInterface/setStatus", ReplyAction="http://tabletinterface.com/ITabletInterface/setStatusResponse")]
        string setStatus(string statusID, string statusName, string vehicleNumber, string driverID, string statusStart, string statusEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tabletinterface.com/ITabletInterface/setStatus", ReplyAction="http://tabletinterface.com/ITabletInterface/setStatusResponse")]
        System.Threading.Tasks.Task<string> setStatusAsync(string statusID, string statusName, string vehicleNumber, string driverID, string statusStart, string statusEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tabletinterface.com/ITabletInterface/getDispatches", ReplyAction="http://tabletinterface.com/ITabletInterface/getDispatchesResponse")]
        IntelliTraxx.TabletService.dispatch getDispatches(string routerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tabletinterface.com/ITabletInterface/getDispatches", ReplyAction="http://tabletinterface.com/ITabletInterface/getDispatchesResponse")]
        System.Threading.Tasks.Task<IntelliTraxx.TabletService.dispatch> getDispatchesAsync(string routerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tabletinterface.com/ITabletInterface/ackDispatch", ReplyAction="http://tabletinterface.com/ITabletInterface/ackDispatchResponse")]
        void ackDispatch(System.Guid dispatchID, string note, string driverPIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tabletinterface.com/ITabletInterface/ackDispatch", ReplyAction="http://tabletinterface.com/ITabletInterface/ackDispatchResponse")]
        System.Threading.Tasks.Task ackDispatchAsync(System.Guid dispatchID, string note, string driverPIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tabletinterface.com/ITabletInterface/closeDispatch", ReplyAction="http://tabletinterface.com/ITabletInterface/closeDispatchResponse")]
        void closeDispatch(System.Guid dispatchID, string note);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tabletinterface.com/ITabletInterface/closeDispatch", ReplyAction="http://tabletinterface.com/ITabletInterface/closeDispatchResponse")]
        System.Threading.Tasks.Task closeDispatchAsync(System.Guid dispatchID, string note);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tabletinterface.com/ITabletInterface/createNewVehicle", ReplyAction="http://tabletinterface.com/ITabletInterface/createNewVehicleResponse")]
        string createNewVehicle(string vehicleID, string MACAddress, string vehicleFriendlyName, string licensePlate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tabletinterface.com/ITabletInterface/createNewVehicle", ReplyAction="http://tabletinterface.com/ITabletInterface/createNewVehicleResponse")]
        System.Threading.Tasks.Task<string> createNewVehicleAsync(string vehicleID, string MACAddress, string vehicleFriendlyName, string licensePlate);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITabletInterfaceChannel : IntelliTraxx.TabletService.ITabletInterface, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TabletInterfaceClient : System.ServiceModel.ClientBase<IntelliTraxx.TabletService.ITabletInterface>, IntelliTraxx.TabletService.ITabletInterface {
        
        public TabletInterfaceClient() {
        }
        
        public TabletInterfaceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TabletInterfaceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TabletInterfaceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TabletInterfaceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public IntelliTraxx.TabletService.TabletDriver LogonDriver(string DriverNumber, string Password, string VehicleID) {
            return base.Channel.LogonDriver(DriverNumber, Password, VehicleID);
        }
        
        public System.Threading.Tasks.Task<IntelliTraxx.TabletService.TabletDriver> LogonDriverAsync(string DriverNumber, string Password, string VehicleID) {
            return base.Channel.LogonDriverAsync(DriverNumber, Password, VehicleID);
        }
        
        public IntelliTraxx.TabletService.TabletDriver DriverAutoLogon(string PIN, string VehicleID) {
            return base.Channel.DriverAutoLogon(PIN, VehicleID);
        }
        
        public System.Threading.Tasks.Task<IntelliTraxx.TabletService.TabletDriver> DriverAutoLogonAsync(string PIN, string VehicleID) {
            return base.Channel.DriverAutoLogonAsync(PIN, VehicleID);
        }
        
        public string LogoffDriver(string DriverID, string VehicleID) {
            return base.Channel.LogoffDriver(DriverID, VehicleID);
        }
        
        public System.Threading.Tasks.Task<string> LogoffDriverAsync(string DriverID, string VehicleID) {
            return base.Channel.LogoffDriverAsync(DriverID, VehicleID);
        }
        
        public IntelliTraxx.TabletService.TabletDriver LogonDriverByPin(string PIN, string VehicleID) {
            return base.Channel.LogonDriverByPin(PIN, VehicleID);
        }
        
        public System.Threading.Tasks.Task<IntelliTraxx.TabletService.TabletDriver> LogonDriverByPinAsync(string PIN, string VehicleID) {
            return base.Channel.LogonDriverByPinAsync(PIN, VehicleID);
        }
        
        public IntelliTraxx.TabletService.tabletGPS getPosition(string VehicleID) {
            return base.Channel.getPosition(VehicleID);
        }
        
        public System.Threading.Tasks.Task<IntelliTraxx.TabletService.tabletGPS> getPositionAsync(string VehicleID) {
            return base.Channel.getPositionAsync(VehicleID);
        }
        
        public string setStatus(string statusID, string statusName, string vehicleNumber, string driverID, string statusStart, string statusEnd) {
            return base.Channel.setStatus(statusID, statusName, vehicleNumber, driverID, statusStart, statusEnd);
        }
        
        public System.Threading.Tasks.Task<string> setStatusAsync(string statusID, string statusName, string vehicleNumber, string driverID, string statusStart, string statusEnd) {
            return base.Channel.setStatusAsync(statusID, statusName, vehicleNumber, driverID, statusStart, statusEnd);
        }
        
        public IntelliTraxx.TabletService.dispatch getDispatches(string routerID) {
            return base.Channel.getDispatches(routerID);
        }
        
        public System.Threading.Tasks.Task<IntelliTraxx.TabletService.dispatch> getDispatchesAsync(string routerID) {
            return base.Channel.getDispatchesAsync(routerID);
        }
        
        public void ackDispatch(System.Guid dispatchID, string note, string driverPIN) {
            base.Channel.ackDispatch(dispatchID, note, driverPIN);
        }
        
        public System.Threading.Tasks.Task ackDispatchAsync(System.Guid dispatchID, string note, string driverPIN) {
            return base.Channel.ackDispatchAsync(dispatchID, note, driverPIN);
        }
        
        public void closeDispatch(System.Guid dispatchID, string note) {
            base.Channel.closeDispatch(dispatchID, note);
        }
        
        public System.Threading.Tasks.Task closeDispatchAsync(System.Guid dispatchID, string note) {
            return base.Channel.closeDispatchAsync(dispatchID, note);
        }
        
        public string createNewVehicle(string vehicleID, string MACAddress, string vehicleFriendlyName, string licensePlate) {
            return base.Channel.createNewVehicle(vehicleID, MACAddress, vehicleFriendlyName, licensePlate);
        }
        
        public System.Threading.Tasks.Task<string> createNewVehicleAsync(string vehicleID, string MACAddress, string vehicleFriendlyName, string licensePlate) {
            return base.Channel.createNewVehicleAsync(vehicleID, MACAddress, vehicleFriendlyName, licensePlate);
        }
    }
}
